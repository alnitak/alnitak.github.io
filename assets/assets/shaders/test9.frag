{
  "sksl": {
    "entrypoint": "test9_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uResolution;\nuniform float iTime;\nuniform shader iChannel0;\nuniform half2 iChannel0_size;\n\nvec4 fragColor;\n\nvec3 iResolution;\nvec2 uv;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_rotateX(vec3 p, float a)\n{\n    float sa = sin(a);\n    float ca = cos(a);\n    vec3 r;\n    r.x = p.x;\n    r.y = (ca * p.y) - (sa * p.z);\n    r.z = (sa * p.y) + (ca * p.z);\n    return r;\n}\n\nvec3 FLT_flutter_local_rotateY(vec3 p, float a)\n{\n    float sa = sin(a);\n    float ca = cos(a);\n    vec3 r;\n    r.x = (ca * p.x) + (sa * p.z);\n    r.y = p.y;\n    r.z = ((-sa) * p.x) + (ca * p.z);\n    return r;\n}\n\nbool FLT_flutter_local_intersectBox(vec3 ro, vec3 rd, vec3 boxmin, vec3 boxmax, inout float tnear, inout float tfar)\n{\n    vec3 invR = vec3(1.0) / rd;\n    vec3 tbot = invR * (boxmin - ro);\n    vec3 ttop = invR * (boxmax - ro);\n    vec3 tmin = min(ttop, tbot);\n    vec3 tmax = max(ttop, tbot);\n    vec2 t0 = max(tmin.xx, tmin.yz);\n    tnear = max(t0.x, t0.y);\n    t0 = min(tmax.xx, tmax.yz);\n    tfar = min(t0.x, t0.y);\n    bool hit;\n    if (tnear > tfar)\n    {\n        hit = false;\n    }\n    else\n    {\n        hit = true;\n    }\n    return hit;\n}\n\nvec3 FLT_flutter_local_background(vec3 rd)\n{\n    return mix(vec3(1.0), vec3(0.60000002384185791015625, 0.60000002384185791015625, 1.0), vec3(abs(rd.y)));\n}\n\nvec2 FLT_flutter_local_worldToTex(vec3 p)\n{\n    vec2 uv_1 = (p.xz * 0.5) + vec2(0.5);\n    uv_1.y = 1.0 - uv_1.y;\n    return uv_1;\n}\n\nfloat FLT_flutter_local_h1(vec2 uv_1)\n{\n    float amp = iChannel0.eval(iChannel0_size * ( vec2(uv_1.x, uv_1.y))).x;\n    return amp;\n}\n\nfloat FLT_flutter_local_heightField(vec3 p)\n{\n    vec3 param = p;\n    vec2 uv_1 = FLT_flutter_local_worldToTex(param);\n    vec2 param_1 = uv_1;\n    return FLT_flutter_local_h1(param_1);\n}\n\nbool FLT_flutter_local_traceHeightField(vec3 ro, vec3 rayStep, inout vec3 hitPos)\n{\n    vec3 p = ro;\n    bool hit = false;\n    float pH = 0.0;\n    vec3 pP = p;\n    for (int i = 0; i < 256; i++)\n    {\n        vec3 param = p;\n        float h = FLT_flutter_local_heightField(param);\n        if ((p.y < h) && (!hit))\n        {\n            hit = true;\n            hitPos = mix(pP, p, vec3((pH - pP.y) / ((p.y - pP.y) - (h - pH))));\n        }\n        pH = h;\n        pP = p;\n        p += rayStep;\n    }\n    return hit;\n}\n\nvoid FLT_flutter_local_mainImage(out vec4 fragColor_1, vec2 fragCoord)\n{\n    vec2 pixel = ((fragCoord / iResolution.xy) * 2.0) - vec2(1.0);\n    pixel = vec2(pixel.x, -pixel.y);\n    float asp = iResolution.x / iResolution.y;\n    vec3 rd = normalize(vec3(asp * pixel.x, pixel.y, -2.0));\n    vec3 ro = vec3(0.0, 0.0, 2.0);\n    float a = -0.800000011920928955078125;\n    vec3 param = rd;\n    float param_1 = a;\n    rd = FLT_flutter_local_rotateX(param, param_1);\n    vec3 param_2 = ro;\n    float param_3 = a;\n    ro = FLT_flutter_local_rotateX(param_2, param_3);\n    a = 1.7999999523162841796875;\n    vec3 param_4 = rd;\n    float param_5 = a;\n    rd = FLT_flutter_local_rotateY(param_4, param_5);\n    vec3 param_6 = ro;\n    float param_7 = a;\n    ro = FLT_flutter_local_rotateY(param_6, param_7);\n    vec3 param_8 = ro;\n    vec3 param_9 = rd;\n    vec3 param_10 = vec3(-1.0, -0.00999999977648258209228515625, -1.0);\n    vec3 param_11 = vec3(1.0, 0.5, 1.0);\n    float param_12;\n    float param_13;\n    bool _385 = FLT_flutter_local_intersectBox(param_8, param_9, param_10, param_11, param_12, param_13);\n    float tnear = param_12;\n    float tfar = param_13;\n    bool hit = _385;\n    tnear -= 9.9999997473787516355514526367188e-05;\n    vec3 pnear = ro + (rd * tnear);\n    vec3 pfar = ro + (rd * tfar);\n    float stepSize = length(pfar - pnear) / 256.0;\n    vec3 param_14 = rd;\n    vec3 rgb = FLT_flutter_local_background(param_14);\n    if (hit)\n    {\n        ro = pnear;\n        vec3 param_15 = ro;\n        vec3 param_16 = rd * stepSize;\n        vec3 param_17;\n        bool _426 = FLT_flutter_local_traceHeightField(param_15, param_16, param_17);\n        vec3 hitPos = param_17;\n        hit = _426;\n        if (hit)\n        {\n            vec3 param_18 = hitPos;\n            vec2 uv_1 = FLT_flutter_local_worldToTex(param_18);\n            vec2 param_19 = uv_1;\n            float amp = FLT_flutter_local_h1(param_19) * 2.0;\n            rgb = vec3(amp, (4.0 * amp) * (1.0 - amp), 0.5 * (1.0 - amp));\n            hitPos += vec3(0.0, 0.00999999977648258209228515625, 0.0);\n            vec3 param_20 = hitPos;\n            vec3 param_21 = vec3(0.0057700001634657382965087890625);\n            vec3 param_22;\n            bool _462 = FLT_flutter_local_traceHeightField(param_20, param_21, param_22);\n            hitPos = param_22;\n            bool shadow = _462;\n            if (shadow)\n            {\n                rgb *= 0.75;\n            }\n        }\n    }\n    fragColor_1 = vec4(rgb, 1.0);\n}\n\nvoid FLT_main()\n{\n    iResolution = vec3(uResolution.x, uResolution.y, 0.0);\n    uv = FLT_flutter_local_FlutterFragCoord();\n    vec2 param_24 = FLT_flutter_local_FlutterFragCoord() - vec2(iTime / 9999999.0);\n    vec4 param_23;\n    FLT_flutter_local_mainImage(param_23, param_24);\n    fragColor = param_23;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 0,
        "name": "iChannel0",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "iTime",
        "rows": 1,
        "type": 10
      }
    ]
  }
}